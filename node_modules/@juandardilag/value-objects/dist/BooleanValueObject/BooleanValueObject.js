"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BooleanValueObject = void 0;
const ValueObject_1 = require("../ValueObject/ValueObject");
const BooleanValueObjectOperator_1 = require("./BooleanValueObjectOperator");
const BooleanValueObjectValidator_1 = require("./BooleanValueObjectValidator");
class BooleanValueObject extends ValueObject_1.ValueObject {
    constructor(value) {
        super({
            operable: new BooleanValueObjectOperator_1.BooleanValueObjectOperator(),
            validatable: new BooleanValueObjectValidator_1.BooleanValueObjectValidator(),
        }, value);
        this._eval = Object.create(null);
    }
    static from(other) {
        return new BooleanValueObject(other.value);
    }
    static true() {
        return new BooleanValueObject(true);
    }
    static false() {
        return new BooleanValueObject(false);
    }
    or(other) {
        return new BooleanValueObject(this.value || other.value);
    }
    and(other) {
        return new BooleanValueObject(this.value && other.value);
    }
    not() {
        return new BooleanValueObject(!this.value);
    }
    toString() {
        return this.value ? "true" : "false";
    }
    then(fn) {
        if (!this.value) {
            return this;
        }
        this._eval = fn();
        return this;
    }
    else(fn) {
        if (this.value) {
            return this;
        }
        this._eval = fn();
        return this;
    }
    eval() {
        return this._eval;
    }
}
exports.BooleanValueObject = BooleanValueObject;
